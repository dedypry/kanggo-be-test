version: '3.7'
services:
    gateway:
      build:
        context: .
        dockerfile: Dockerfile
      container_name: 'GATEWAY'
      ports:
        - 3684:3000
      networks:
        - kanggo_be_test
      volumes:
        - ./proto:/proto
      depends_on:
        - postgresql
      command: sh -c 'pnpm build && pnpm start:prod'
      restart: always

    workers:
      build:
        context: .
        dockerfile: Dockerfile
      container_name: 'WORKER-SERVICE'
      networks:
        - kanggo_be_test
      volumes:
        - ./proto:/proto
      depends_on:
        - postgresql
      command: sh -c 'pnpm build worker_service && pnpm start:worker'
      restart: always

    order:
      build:
        context: .
        dockerfile: Dockerfile
      container_name: 'ORDER-SERVICE'
      volumes:
        - ./proto:/proto
      networks:
        - kanggo_be_test
      depends_on:
        - postgresql
      command: sh -c 'pnpm build order_service && pnpm start:order'
      restart: always

    auth:
      build:
        context: .
        dockerfile: Dockerfile
      container_name: 'AUTH-SERVICE'
      networks:
        - kanggo_be_test
      volumes:
        - ./proto:/proto
      depends_on:
        - postgresql
      command: sh -c 'pnpm build auth_service && pnpm start:auth'
      restart: always

    postgresql:
      image: postgres:alpine
      container_name: 'postgres-service'
      restart: always
      env_file:
        - .env
      volumes:
        - ~/docker-conf/dev/pgdata:/var/lib/postgresql/data
      ports:
        - 1122:5432
      networks:
        - kanggo_be_test

networks:
  kanggo_be_test:
    driver: bridge

